pipeline {
  agent {
    dockerfile {
      dir 'ci/agent'
      args '-v /var/run/docker.sock:/var/run/docker.sock -v $HOME/.gradle:/home/gradle/.gradle'
    }
  }

  environment {
    TZ = 'Asia/Taipei'
  }

  parameters {
    choice(name: 'PROJECT_NAME', choices: ['cclemon-auth', 'cclemon-health','cclemon-config-server'])
    choice(name: 'PROFILE', choices: ['dev', 'prod'])
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'chmod +x gradlew'
      }
    }

    stage('Build') {
      steps {
        dir("${params.PROJECT_NAME}") {
          sh "../gradlew clean build -x test"
        }
      }
    }

    stage('Archive Jar') {
      steps {
        archiveArtifacts artifacts: "${params.PROJECT_NAME}/build/libs/*.jar", fingerprint: true
      }
    }

    stage('Build Docker Image') {
      steps {
        dir("${params.PROJECT_NAME}") {
          script {
            def imageName = "${params.PROJECT_NAME}"
            def imageTag = "${params.PROFILE}"
            sh """
              cp build/libs/${params.PROJECT_NAME}.jar build/libs/app.jar

              docker build -f ../ci/Dockerfile \
                           -t ${params.PROJECT_NAME}:${params.PROFILE} \
                           --build-arg PROJECT_NAME=${params.PROJECT_NAME} \
                           build/libs
            """
          }
        }
      }
    }

    stage('Trigger Auto Deploy') {
      when {
        expression { return params.PROFILE != 'prod' }
      }
      steps {
        script {
          echo "üîÅ PROFILE Èùû prodÔºåËß∏ÁôºËá™ÂãïÈÉ®ÁΩ≤ JobÔºöcclemon-auto-deploy"
          build job: 'cclemon-auto-deploy',
            parameters: [
              string(name: 'PROJECT_NAME', value: params.PROJECT_NAME),
              string(name: 'PROFILE', value: params.PROFILE)
            ]
        }
      }
    }
  }
}
