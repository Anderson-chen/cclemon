pipeline {
  agent {
    dockerfile {
      args '-v /var/run/docker.sock:/var/run/docker.sock -v $HOME/.gradle:/home/gradle/.gradle'
    }
  }

  environment {
    TZ = 'Asia/Taipei'
  }

  parameters {
    string(name: 'PROJECT_DIR', defaultValue: 'cclemon-auth', description: '專案資料夾路徑')
    choice(name: 'BUILD_PROFILE', choices: ['dev', 'prod'], description: 'Build profile')
    booleanParam(name: 'DO_DEPLOY', defaultValue: false, description: '是否進行部署')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'chmod +x gradlew'
      }
    }

    stage('Build') {
      steps {
        dir("${params.PROJECT_DIR}") {
          sh "../gradlew clean build -x test -Pprofile=${params.BUILD_PROFILE}"
        }
      }
    }

    stage('Archive Jar') {
      steps {
        archiveArtifacts artifacts: "${params.PROJECT_DIR}/build/libs/*.jar", fingerprint: true
      }
    }

    stage('Build Docker Image') {
      steps {
        dir("${params.PROJECT_DIR}") {
          script {
            def imageName = "${params.PROJECT_DIR}"
            def imageTag = "${params.BUILD_PROFILE}"
            sh "docker build -t ${imageName}:${imageTag} ."
            // 可加入 push registry 的指令
          }
        }
      }
    }

    stage('Deploy') {
      when {
        expression { return params.DO_DEPLOY }
      }
      steps {
        echo "Deploying ${params.PROJECT_DIR} with profile ${params.BUILD_PROFILE}"
        // 加入你部署的腳本或 ssh 指令
        // sh "./deploy.sh ${params.BUILD_PROFILE}"
      }
    }
  }
}
